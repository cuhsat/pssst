#%RAML 0.8
title: Pssst API
baseUri: {address}/{version}
address: http://localhost:62221
version: 2
mediaType: application/text
securedBy: [x-pssst-hash]
securitySchemes:
  - customHeader:
      description: Authentication header
      type: x-pssst-hash
      descriptedBy:
        headers:
          x-pssst-hash:
            displayName: Pssst hash
            description: Timestamp; Signed base64 encoded hash of the body
            type: string
            required: true
            minLength: 696
            maxLength: 696
            example: |
              1234567890; ABCDEFGHIJKLMNOPQRSTUVWXYZ...
/:
  displayName: Version
  description: Server version
  get:
    description: This method will return the server version
    responses:
      200:
        body:
          application/text
/key:
  displayName: Key
  description: Server public key
  get:
    description: This method will return the servers public key
    responses:
      200:
        body:
          application/text
/{hash}:
  displayName: User
  description: A specific user
  uriParameters:
    hash:
      displayName: Hashed user name
      type: string
  post:
    description: This method will create this user
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/schema",
            "properties": {
              "key": {
                "required": true,
                "type": "string"
              }
            },
            "required": true,
            "type": "object"
          }
    responses:
      200:
        body:
          application/text:
            User created
  delete:
    description: This method will disable this user
    responses:
      200:
        body:
          application/text:
            User disabled
  /box:
    displayName: box
    description: The users message box
    get:
      description: This method will pull a message
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/schema",
                  "properties": {
                    "nonce": {
                      "required": true,
                      "type": "string"
                    },
                    "data": {
                      "required": true,
                      "type": "string"
                    }
                  },
                  "required": true,
                  "type": "object"
                }
        404:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/schema",
                  "required": true,
                  "type": "object"
                }
    put:
      description: This method will push a message
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/schema",
              "properties": {
                "nonce": {
                  "required": true,
                  "type": "string"
                },
                "data": {
                  "required": true,
                  "type": "string"
                }
              },
              "required": true,
              "type": "object"
            }
      responses:
        200:
          body:
            application/text:
              Message pushed
  /key:
    displayName: Key
    description: Public key
    get:
      description: This method will return this users public key
      responses:
        200:
          body:
            application/text
